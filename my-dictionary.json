{
    "Многозадачность": "Многозадачность — это способность системы или программы обрабатывать несколько задач одновременно.",
    "Асинхронность": "Асинхронность — это способ организации выполнения задач так, чтобы они не зависели друг от друга и могли выполняться параллельно.",
    "Обработка событий": "Обработка событий — это механизм в программировании, при котором программа реагирует на события, происходящие в системе или внешнем окружении.",
    "RESTful API": "RESTful API (Representational State Transfer) — это стиль архитектуры веб-сервисов, основанный на принципах REST.",
    "WebSocket": "WebSocket — это протокол взаимодействия веб-приложений, обеспечивающий полнодуплексное соединение между клиентом и сервером.",
    "Параллельность": "Параллельность — это одновременное выполнение нескольких задач с использованием множества потоков или процессов.",
    "Микросервисная архитектура": "Микросервисная архитектура — это методология проектирования программного обеспечения, при которой приложение состоит из небольших автономных сервисов.",
    "Фронтенд": "Фронтенд — это часть веб-приложения, отвечающая за отображение информации и взаимодействие с пользователем.",
    "Бэкенд": "Бэкенд — это серверная часть веб-приложения, отвечающая за обработку данных, бизнес-логику и взаимодействие с базой данных.",
    "HTTP": "HTTP (Hypertext Transfer Protocol) — это протокол передачи данных в сети, используемый для обмена информацией между клиентом и сервером в вебе.",
    "API": "API (Application Programming Interface) — это интерфейс, предоставляющий набор методов и правил взаимодействия между различными программами.",
    "JSON": "JSON (JavaScript Object Notation) — это формат обмена данными, основанный на синтаксисе объектов JavaScript.",
    "Аутентификация": "Аутентификация — процесс проверки подлинности пользователя или системы с целью предоставления доступа.",
    "Авторизация": "Авторизация — предоставление пользователям прав доступа к определенным ресурсам или функционалу после успешной аутентификации.",
    "Мiddleware": "Middleware — это программное обеспечение, расположенное между операционной системой и приложением, обеспечивающее дополнительную функциональность.",
    "GraphQL": "GraphQL — это язык запросов и среда выполнения запросов с открытым исходным кодом для вашего API.",
    "CORS": "CORS (Cross-Origin Resource Sharing) — это механизм, позволяющий веб-странице запрашивать ресурсы с другого домена, чем тот, который предоставляет саму страницу.",
    "SPA": "SPA (Single Page Application) — это веб-приложение, которое загружает единственную HTML-страницу и обновляет содержимое динамически по мере необходимости.",
    "Масштабирование": "Масштабирование — это процесс увеличения или уменьшения мощности системы для поддержки количества пользователей или объема данных.",
    "Docker": "Docker — это открытая платформа для разработки, доставки и запуска приложений в контейнерах.",
    "ORM": "ORM (Object-Relational Mapping) — это технология, которая связывает объекты в коде программы с записями в реляционной базе данных.",
    "NoSQL": "NoSQL — это подход к проектированию баз данных, отличающийся от реляционной модели и часто используемый для хранения и обработки больших объемов неструктурированных данных.",
    "WebSockets": "WebSockets — это протокол обмена сообщениями между браузером и веб-сервером в режиме реального времени.",
    "JWT": "JWT (JSON Web Token) — это компактный, самостоятельный и безопасный способ передачи информации между сторонами в виде строки.",
    "OAuth": "OAuth — это протокол авторизации, который позволяет сторонним приложениям получать ограниченный доступ к ресурсам пользователя без необходимости передачи ему своих учетных данных.",
    "CI/CD": "CI/CD (Continuous Integration/Continuous Delivery) — это методология разработки программного обеспечения, включающая в себя автоматизацию процессов сборки, тестирования и развертывания приложения.",
    "DevOps": "DevOps — это практика объединения разработки и операций для улучшения сроков поставки и качества программного обеспечения.",
    "Microservices": "Microservices — это подход к разработке программного обеспечения, в котором приложение разбивается на небольшие, независимые и легко масштабируемые сервисы.",
    "Scrum": "Scrum — это фреймворк управления проектами, используемый для разработки и доставки высококачественного продукта.",
    "Kubernetes": "Kubernetes — это открытая система для автоматизации развертывания, масштабирования и управления контейнеризированными приложениями.",
    "SQL": "SQL (Structured Query Language) — язык структурированных запросов, используемый для управления данными в реляционных базах данных.",
    "HTTP/2": "HTTP/2 — это новая версия протокола HTTP, предоставляющая улучшенную производительность и поддержку множественных потоков.",
    "REST": "REST (Representational State Transfer) — это архитектурный стиль, используемый при проектировании распределенных систем, таких как веб-сервисы.",
    "Интеграция": "Интеграция — это процесс объединения различных компонентов или систем с целью обеспечения их взаимодействия и совместной работы.",
    "Мониторинг": "Мониторинг — это систематическое отслеживание и контроль работы приложения или системы с целью выявления и устранения проблем.",
    "Шифрование": "Шифрование — это процесс преобразования информации в нечитаемый вид с использованием специального ключа, обеспечивающего ее безопасность.",
    "Балансировка нагрузки": "Балансировка нагрузки — это распределение трафика между несколькими серверами или ресурсами с целью обеспечения оптимальной производительности и надежности системы.",
    "Оптимизация производительности": "Оптимизация производительности — это процесс улучшения работы приложения или системы с целью повышения скорости, эффективности и отзывчивости.",
    "Кэширование": "Кэширование — это технология хранения временных копий данных с целью ускорения доступа к ним в будущем.",
    "CDN": "CDN (Content Delivery Network) — это распределенная сеть серверов, предназначенная для максимально быстрой доставки контента конечным пользователям.",
    "Инфраструктура как код": "Инфраструктура как код — это методология управления и развертывания инфраструктуры с использованием средств автоматизации и контроля версий кода.",
    "Distributed Systems": "Distributed Systems — это системы, в которых компоненты или процессы распределены по разным узлам сети, взаимодействуя и совместно работая."
  }